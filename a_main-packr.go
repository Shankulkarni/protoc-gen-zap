// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package main

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./templates", "file.tmpl", "\"e3stIGRlZmluZSAiRmlsZSIgLX19Ci8vIENvZGUgZ2VuZXJhdGVkIGJ5IHByb3RvYy1nZW4tZGVmYXVsdHMuIERPIE5PVCBFRElULgoKcGFja2FnZSB7eyAuUGFja2FnZU5hbWUgfX0KCgppbXBvcnQgICgKImdvLnViZXIub3JnL3phcC96YXBjb3JlIgoidGltZSIKImdpdGh1Yi5jb20vZ29sYW5nL3Byb3RvYnVmL3B0eXBlcyIKKQoKCnt7IHJhbmdlIC5NZXNzYWdlcyB9fXt7IHRlbXBsYXRlICJNZXNzYWdlIiAuIH19e3sgZW5kIH19Cgp7eyBlbmQgfX0=\"")
	packr.PackJSONBytes("./templates", "message.tmpl", "\"\"")
}
